import React from 'react';

export interface WashiTapePattern {
  id: string;
  background: string;
  svg: React.ReactNode;
}

interface WashiTapeToolProps {
  isSelected: boolean;
  onClick: () => void;
  color?: string;
  selectedPattern?: string;
  onPatternSelect?: (patternId: string) => void;
}

// Pattern definition
export const WASHI_PATTERNS: WashiTapePattern[] = [
  {
    id: 'scallop',
    background: '#6E90ED',
    svg: (
      <g>
        <rect width="18" height="24" fill="currentColor"/>
        <path fillRule="evenodd" clipRule="evenodd" d="M5.5 2C5.88418 2 6.23462 1.85557 6.5 1.61805C6.76538 1.85557 7.11582 2 7.5 2C7.88418 2 8.23462 1.85557 8.5 1.61805C8.76538 1.85557 9.11582 2 9.5 2C9.88418 2 10.2346 1.85557 10.5 1.61805C10.7654 1.85557 11.1158 2 11.5 2C11.8842 2 12.2346 1.85557 12.5 1.61805C12.7654 1.85557 13.1158 2 13.5 2C13.8842 2 14.2346 1.85557 14.5 1.61805C14.7654 1.85557 15.1158 2 15.5 2C15.8842 2 16.2346 1.85557 16.5 1.61805C16.7654 1.85557 17.1158 2 17.5 2C17.8842 2 18.2346 1.85557 18.5 1.61805C18.7654 1.85557 19.1158 2 19.5 2C19.8842 2 20.2346 1.85557 20.5 1.61805C20.7654 1.85557 21.1158 2 21.5 2C22.3284 2 23 1.32843 23 0.5C23 -0.328427 22.3284 -1 21.5 -1C21.1158 -1 20.7654 -0.855572 20.5 -0.618049C20.2346 -0.855572 19.8842 -1 19.5 -1C19.1158 -1 18.7654 -0.855573 18.5 -0.618053C18.2346 -0.855573 17.8842 -1 17.5 -1C17.1158 -1 16.7654 -0.855573 16.5 -0.618053C16.2346 -0.855573 15.8842 -1 15.5 -1C15.1158 -1 14.7654 -0.855573 14.5 -0.618053C14.2346 -0.855573 13.8842 -1 13.5 -1C13.1158 -1 12.7654 -0.855573 12.5 -0.618053C12.2346 -0.855573 11.8842 -1 11.5 -1C11.1158 -1 10.7654 -0.855573 10.5 -0.618053C10.2346 -0.855573 9.88418 -1 9.5 -1C9.11582 -1 8.76538 -0.855573 8.5 -0.618053C8.23462 -0.855573 7.88418 -1 7.5 -1C7.11582 -1 6.76538 -0.855573 6.5 -0.618053C6.23462 -0.855573 5.88418 -1 5.5 -1C4.67157 -1 4 -0.328427 4 0.5C4 1.32843 4.67157 2 5.5 2Z" fill="#D9D9D9"/>
        <path fillRule="evenodd" clipRule="evenodd" d="M5.5 14C5.88418 14 6.23462 13.8556 6.5 13.6181C6.76538 13.8556 7.11582 14 7.5 14C7.88418 14 8.23462 13.8556 8.5 13.6181C8.76538 13.8556 9.11582 14 9.5 14C9.88418 14 10.2346 13.8556 10.5 13.6181C10.7654 13.8556 11.1158 14 11.5 14C11.8842 14 12.2346 13.8556 12.5 13.6181C12.7654 13.8556 13.1158 14 13.5 14C13.8842 14 14.2346 13.8556 14.5 13.6181C14.7654 13.8556 15.1158 14 15.5 14C15.8842 14 16.2346 13.8556 16.5 13.6181C16.7654 13.8556 17.1158 14 17.5 14C17.8842 14 18.2346 13.8556 18.5 13.6181C18.7654 13.8556 19.1158 14 19.5 14C19.8842 14 20.2346 13.8556 20.5 13.618C20.7654 13.8556 21.1158 14 21.5 14C22.3284 14 23 13.3284 23 12.5C23 11.6716 22.3284 11 21.5 11C21.1158 11 20.7654 11.1444 20.5 11.382C20.2346 11.1444 19.8842 11 19.5 11C19.1158 11 18.7654 11.1444 18.5 11.3819C18.2346 11.1444 17.8842 11 17.5 11C17.1158 11 16.7654 11.1444 16.5 11.3819C16.2346 11.1444 15.8842 11 15.5 11C15.1158 11 14.7654 11.1444 14.5 11.3819C14.2346 11.1444 13.8842 11 13.5 11C13.1158 11 12.7654 11.1444 12.5 11.3819C12.2346 11.1444 11.8842 11 11.5 11C11.1158 11 10.7654 11.1444 10.5 11.3819C10.2346 11.1444 9.88418 11 9.5 11C9.11582 11 8.76538 11.1444 8.5 11.3819C8.23462 11.1444 7.88418 11 7.5 11C7.11582 11 6.76538 11.1444 6.5 11.3819C6.23462 11.1444 5.88418 11 5.5 11C4.67157 11 4 11.6716 4 12.5C4 13.3284 4.67157 14 5.5 14Z" fill="#D9D9D9"/>
        <path fillRule="evenodd" clipRule="evenodd" d="M5.5 26C5.88418 26 6.23462 25.8556 6.5 25.6181C6.76538 25.8556 7.11582 26 7.5 26C7.88418 26 8.23462 25.8556 8.5 25.6181C8.76538 25.8556 9.11582 26 9.5 26C9.88418 26 10.2346 25.8556 10.5 25.6181C10.7654 25.8556 11.1158 26 11.5 26C11.8842 26 12.2346 25.8556 12.5 25.6181C12.7654 25.8556 13.1158 26 13.5 26C13.8842 26 14.2346 25.8556 14.5 25.6181C14.7654 25.8556 15.1158 26 15.5 26C15.8842 26 16.2346 25.8556 16.5 25.6181C16.7654 25.8556 17.1158 26 17.5 26C17.8842 26 18.2346 25.8556 18.5 25.6181C18.7654 25.8556 19.1158 26 19.5 26C19.8842 26 20.2346 25.8556 20.5 25.618C20.7654 25.8556 21.1158 26 21.5 26C22.3284 26 23 25.3284 23 24.5C23 23.6716 22.3284 23 21.5 23C21.1158 23 20.7654 23.1444 20.5 23.382C20.2346 23.1444 19.8842 23 19.5 23C19.1158 23 18.7654 23.1444 18.5 23.3819C18.2346 23.1444 17.8842 23 17.5 23C17.1158 23 16.7654 23.1444 16.5 23.3819C16.2346 23.1444 15.8842 23 15.5 23C15.1158 23 14.7654 23.1444 14.5 23.3819C14.2346 23.1444 13.8842 23 13.5 23C13.1158 23 12.7654 23.1444 12.5 23.3819C12.2346 23.1444 11.8842 23 11.5 23C11.1158 23 10.7654 23.1444 10.5 23.3819C10.2346 23.1444 9.88418 23 9.5 23C9.11582 23 8.76538 23.1444 8.5 23.3819C8.23462 23.1444 7.88418 23 7.5 23C7.11582 23 6.76538 23.1444 6.5 23.3819C6.23462 23.1444 5.88418 23 5.5 23C4.67157 23 4 23.6716 4 24.5C4 25.3284 4.67157 26 5.5 26Z" fill="#D9D9D9"/>
      </g>
    )
  }
];

export const PatternPreview: React.FC<{ pattern: WashiTapePattern; isSelected: boolean; onClick: () => void }> = ({
  pattern,
  isSelected,
  onClick
}) => {
  return (
    <button
      onClick={onClick}
      className={`w-7 h-7 rounded-full overflow-hidden transition-all
        ${isSelected ? 'ring-2 ring-gray-400' : 'hover:ring-2 hover:ring-gray-200'}`}
    >
      <svg 
        width="100%" 
        height="100%" 
        viewBox="0 0 18 24" 
        fill="none" 
        xmlns="http://www.w3.org/2000/svg"
        style={{ color: pattern.background }}
      >
        {pattern.svg}
      </svg>
    </button>
  );
};

const WashiTapeTool: React.FC<WashiTapeToolProps> = ({
  isSelected,
  onClick,
  color = '#000000',
  selectedPattern = 'scallop',
  onPatternSelect
}) => {
  return (
    <button
      onClick={onClick}
      className={`w-20 h-20 rounded-md flex items-center justify-center transition-all
        ${isSelected ? 'bg-gray-100' : 'hover:bg-gray-50'}`}
      title="Washi Tape Tool"
    >
      <svg 
        width="40" 
        height="53" 
        viewBox="0 0 15 20" 
        fill="none" 
        xmlns="http://www.w3.org/2000/svg"
      >
        <path 
          d="M0.0916662 3.36702L9.075 18.9266C9.12563 19.0143 9.23775 19.0443 9.32544 18.9937L9.89476 18.665C9.93687 18.6407 9.96759 18.6007 9.98018 18.5537L10.2571 17.52C10.2798 17.4356 10.3588 17.3789 10.446 17.3845L11.8232 17.4734C11.8971 17.4781 11.9665 17.438 11.9993 17.3717L12.611 16.1346C12.6497 16.0562 12.7384 16.0161 12.8228 16.0388L13.8565 16.3157C13.9034 16.3283 13.9535 16.3217 13.9956 16.2974L14.5649 15.9687C14.6526 15.9181 14.6826 15.806 14.632 15.7183L5.64866 0.158689C5.59804 0.0710023 5.48591 0.0409589 5.39823 0.0915849L4.82891 0.420282C4.7868 0.444593 4.75607 0.484637 4.74349 0.531604L4.46652 1.56527C4.4439 1.64968 4.36484 1.70639 4.27763 1.70077L2.90047 1.61195C2.82661 1.60719 2.75713 1.6473 2.72433 1.71365L2.11266 2.95071C2.07393 3.02905 1.98529 3.06916 1.90087 3.04654L0.867209 2.76957C0.820242 2.75699 0.7702 2.76358 0.728091 2.78789L0.158771 3.11659C0.0710844 3.16721 0.0410404 3.27934 0.0916662 3.36702Z" 
          fill={isSelected ? color : '#4B5563'}
        />
      </svg>
    </button>
  );
};

export default WashiTapeTool; 