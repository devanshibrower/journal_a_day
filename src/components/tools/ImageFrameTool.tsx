import React, { useState } from 'react';

export interface FramePattern {
  id: string;
  svg: (color: string, isSelected: boolean, isHovered: boolean) => React.ReactElement;
  previewSvg: (color: string) => React.ReactElement;
}

interface ImageFrameToolProps {
  isSelected: boolean;
  onClick: () => void;
  color?: string;
  selectedPattern?: string;
  onPatternSelect?: (patternId: string) => void;
}

// Frame pattern definitions
export const FRAME_PATTERNS: FramePattern[] = [
  {
    id: 'regular',
    svg: (color: string, isSelected: boolean, isHovered: boolean = false) => (
      <svg width="53" height="53" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_104_1644)">
          <rect x="1" y="1" width="14" height="14" rx="0.875" fill="#D4D4D8"/>
          <path d="M1 10.4999C2.19786 9.76782 4 7.49989 6 11.4999C6.91756 13.335 7.75021 7.43738 10 7.99992C12 8.5 14.1765 11.1628 15 11.9999" stroke={isSelected ? color : isHovered ? '#18181B' : '#71717A'} strokeWidth="0.875" strokeLinecap="round"/>
          <circle cx="12.3125" cy="4.3125" r="1.3125" fill={isSelected ? color : isHovered ? '#18181B' : '#71717A'}/>
        </g>
        <defs>
          <clipPath id="clip0_104_1644">
            <rect x="1" y="1" width="14" height="14" rx="0.875" fill="white"/>
          </clipPath>
        </defs>
      </svg>
    ),
    previewSvg: (color: string) => (
      <svg width="28" height="28" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_104_1644)">
          <rect x="1" y="1" width="14" height="14" rx="0.875" fill="#D4D4D8"/>
          <path d="M1 10.4999C2.19786 9.76782 4 7.49989 6 11.4999C6.91756 13.335 7.75021 7.43738 10 7.99992C12 8.5 14.1765 11.1628 15 11.9999" stroke={color} strokeWidth="0.875" strokeLinecap="round"/>
          <circle cx="12.3125" cy="4.3125" r="1.3125" fill={color}/>
        </g>
        <defs>
          <clipPath id="clip0_104_1644">
            <rect x="1" y="1" width="14" height="14" rx="0.875" fill="white"/>
          </clipPath>
        </defs>
      </svg>
    )
  },
  {
    id: 'polaroid',
    svg: (color: string) => (
      <svg width="40" height="53" viewBox="0 0 16 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect x="0.285156" width="15.4286" height="18" rx="0.5" fill={color}/>
        <g clipPath="url(#clip0_83_227)">
          <rect x="1.14258" y="0.857178" width="13.7143" height="13.7143" rx="0.2" fill="#D9D9D9"/>
          <path d="M0.285156 10.2059C1.53191 9.45633 1.99944 8.5715 4.57087 11.1429C6.28516 12.8572 6.06935 8.87236 7.99944 7.71433C10.1423 6.42864 13.9994 10.7142 14.8566 11.5714" 
            stroke="black" 
            strokeWidth="0.857143" 
            strokeLinecap="round"
          />
          <circle cx="12.7134" cy="3.00007" r="1.28571" fill="black"/>
        </g>
        <defs>
          <clipPath id="clip0_83_227">
            <rect x="1.14258" y="0.857178" width="13.7143" height="13.7143" rx="0.2" fill="white"/>
          </clipPath>
        </defs>
      </svg>
    ),
    previewSvg: (color: string) => (
      <svg width="28" height="28" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect width="12" height="12" rx="6" fill="white"/>
        <g clipPath="url(#clip0_83_252)">
          <rect x="3" y="2.25" width="6" height="7" rx="0.194444" fill={color}/>
          <g clipPath="url(#clip1_83_252)">
            <rect x="3.33398" y="2.58325" width="5.33333" height="5.33333" rx="0.0777778" fill="#D9D9D9"/>
            <path d="M3 6.21927C3.48485 5.92776 3.66667 5.58366 4.66667 6.58366C5.33333 7.25033 5.24941 5.70066 6 5.25032C6.83333 4.75033 8.33333 6.41694 8.66667 6.75028" 
              stroke="black" 
              strokeWidth="0.333333" 
              strokeLinecap="round"
            />
            <circle cx="7.83398" cy="3.41699" r="0.5" fill="black"/>
          </g>
        </g>
        <defs>
          <clipPath id="clip0_83_252">
            <rect x="3" y="2.25" width="6" height="7" rx="0.194444" fill="white"/>
          </clipPath>
          <clipPath id="clip1_83_252">
            <rect x="3.33398" y="2.58325" width="5.33333" height="5.33333" rx="0.0777778" fill="white"/>
          </clipPath>
        </defs>
      </svg>
    )
  },
  {
    id: 'cloud',
    svg: (color: string) => (
      <svg width="40" height="53" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M3.23452 0.554953C3.26249 0.582929 3.2896 0.611776 3.31579 0.641449C3.66297 0.248093 4.17093 0 4.73684 0C5.30275 0 5.81071 0.248093 6.15789 0.641449C6.50508 0.248093 7.01304 0 7.57895 0C8.14485 0 8.65281 0.248093 9 0.641449C9.34718 0.248093 9.85515 0 10.4211 0C10.987 0 11.4949 0.248093 11.8421 0.641449C12.1893 0.248093 12.6973 0 13.2632 0C13.829 0 14.3368 0.247996 14.684 0.641217C15.0312 0.247996 15.5391 0 16.1049 0C17.1513 0 18 0.848299 18 1.89473C18 2.46073 17.7518 2.96877 17.3583 3.31596C17.7516 3.66313 17.9996 4.17101 17.9996 4.73682C17.9996 5.30273 17.7515 5.81069 17.3581 6.15787C17.7515 6.50505 17.9996 7.01301 17.9996 7.57891C17.9996 8.14482 17.7515 8.65278 17.3581 8.99996C17.7515 9.34714 17.9996 9.8551 17.9996 10.421C17.9996 10.9869 17.7515 11.4949 17.3581 11.8421C17.7515 12.1892 17.9996 12.6972 17.9996 13.2631C17.9996 13.8289 17.7516 14.3368 17.3583 14.684C17.7518 15.0312 18 15.5392 18 16.1052C18 17.1354 17.1778 17.9736 16.1538 17.9993C16.1376 17.9997 16.1215 17.9999 16.1053 17.9999C16.1053 17.9999 16.1053 17.9999 16.1053 17.9999C15.5394 17.9999 15.0314 17.7518 14.6842 17.3585C14.6842 17.3586 14.6843 17.3584 14.6842 17.3585C14.3371 17.7518 13.829 18 13.2632 18C12.6973 18 12.1893 17.7519 11.8421 17.3585C11.4949 17.7519 10.987 18 10.4211 18C9.85515 18 9.34718 17.7519 9 17.3585C8.65282 17.7519 8.14485 18 7.57895 18C7.01304 18 6.50508 17.7519 6.15789 17.3585C5.81071 17.7519 5.30275 18 4.73684 18C4.17093 18 3.66297 17.7519 3.31579 17.3585C2.9686 17.7519 2.46064 18 1.89474 18C0.848303 18 0 17.1517 0 16.1053C0 16.1052 0 16.1053 0 16.1053C0 15.5394 0.248095 15.0313 0.641453 14.6841C0.248095 14.337 0 13.829 0 13.2631C0 12.6972 0.248095 12.1892 0.641452 11.8421C0.248095 11.4949 0 10.9869 0 10.421C0 9.8551 0.248095 9.34714 0.641452 8.99996C0.248095 8.65278 0 8.14482 0 7.57891C0 7.01301 0.248095 6.50505 0.641452 6.15787C0.248095 5.81069 0 5.30273 0 4.73682C0 4.17092 0.248095 3.66296 0.641452 3.31578C0.248095 2.96859 0 2.46063 0 1.89473C0 0.848299 0.848303 0 1.89474 0C2.41795 0 2.89164 0.212075 3.23452 0.554953ZM3.31582 14.852C3.66301 14.4586 4.17095 14.2105 4.73684 14.2105C5.30275 14.2105 5.81071 14.4586 6.15789 14.852C6.50508 14.4586 7.01304 14.2105 7.57895 14.2105C8.14485 14.2105 8.65281 14.4586 9 14.852C9.34718 14.4586 9.85515 14.2105 10.4211 14.2105C10.987 14.2105 11.4949 14.4586 11.8421 14.852C12.1893 14.4586 12.6973 14.2105 13.2632 14.2105C13.8289 14.2105 14.3368 14.4585 14.684 14.8517C14.7363 14.7924 14.7923 14.7365 14.8516 14.6841C14.4582 14.337 14.2101 13.829 14.2101 13.2631C14.2101 12.6972 14.4582 12.1892 14.8516 11.8421C14.4582 11.4949 14.2101 10.9869 14.2101 10.421C14.2101 9.8551 14.4582 9.34714 14.8516 8.99996C14.4582 8.65278 14.2101 8.14482 14.2101 7.57891C14.2101 7.01301 14.4582 6.50505 14.8516 6.15787C14.4582 5.81069 14.2101 5.30273 14.2101 4.73682C14.2101 4.17092 14.4582 3.66296 14.8516 3.31578C14.7923 3.26346 14.7363 3.2075 14.684 3.14824C14.3368 3.54146 13.829 3.78946 13.2632 3.78946C12.6973 3.78946 12.1893 3.54136 11.8421 3.14801C11.4949 3.54136 10.987 3.78946 10.4211 3.78946C9.85515 3.78946 9.34718 3.54136 9 3.14801C8.65282 3.54136 8.14485 3.78946 7.57895 3.78946C7.01304 3.78946 6.50508 3.54136 6.15789 3.14801C5.81071 3.54136 5.30275 3.78946 4.73684 3.78946C4.17093 3.78946 3.66297 3.54136 3.31579 3.14801C3.26341 3.20735 3.20737 3.2634 3.14802 3.31578C3.54138 3.66296 3.78947 4.17092 3.78947 4.73682C3.78947 5.30273 3.54138 5.81069 3.14802 6.15787C3.54138 6.50505 3.78947 7.01301 3.78947 7.57891C3.78947 8.14482 3.54138 8.65278 3.14802 8.99996C3.54138 9.34714 3.78947 9.8551 3.78947 10.421C3.78947 10.9869 3.54138 11.4949 3.14802 11.8421C3.54138 12.1892 3.78947 12.6972 3.78947 13.2631C3.78947 13.829 3.54138 14.337 3.14802 14.6841C3.20738 14.7365 3.26343 14.7926 3.31582 14.852Z" fill={color}/>
        <rect x="2.69922" y="2.69995" width="12.6" height="12.6" rx="0.9" fill={color}/>
        <g clipPath="url(#clip0_83_231)">
          <mask id="mask0_83_231" maskUnits="userSpaceOnUse" x="2" y="2" width="14" height="14">
            <path d="M15.5143 2H2.2C2.08954 2 2 2.08954 2 2.2V15.5143C2 15.6248 2.08954 15.7143 2.2 15.7143H15.5143C15.6248 15.7143 15.7143 15.6248 15.7143 15.5143V2.2C15.7143 2.08954 15.6248 2 15.5143 2Z" fill="white"/>
          </mask>
          <g mask="url(#mask0_83_231)">
            <path d="M15.5143 2H2.2C2.08954 2 2 2.08954 2 2.2V15.5143C2 15.6248 2.08954 15.7143 2.2 15.7143H15.5143C15.6248 15.7143 15.7143 15.6248 15.7143 15.5143V2.2C15.7143 2.08954 15.6248 2 15.5143 2Z" fill="#D9D9D9"/>
            <path d="M1.14453 11.3488C2.39128 10.5992 2.85882 9.71432 5.43025 12.2857C7.14453 14 6.92873 10.0152 8.85882 8.85716C11.0017 7.57147 14.8588 11.8571 15.716 12.7142" 
              stroke="black" 
              strokeWidth="0.857143" 
              strokeLinecap="round"
            />
            <path d="M13.5728 5.4286C14.2829 5.4286 14.8585 4.85297 14.8585 4.14289C14.8585 3.43281 14.2829 2.85718 13.5728 2.85718C12.8627 2.85718 12.2871 3.43281 12.2871 4.14289C12.2871 4.85297 12.8627 5.4286 13.5728 5.4286Z" fill="black"/>
          </g>
        </g>
        <defs>
          <clipPath id="clip0_83_231">
            <rect width="14" height="14" fill="white" transform="translate(2 2)"/>
          </clipPath>
        </defs>
      </svg>
    ),
    previewSvg: (color: string) => (
      <svg width="28" height="28" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect width="12" height="12" rx="6" fill="white"/>
        <path d="M3.78947 2.74945C3.77929 2.73791 3.76875 2.72669 3.75787 2.71582C3.62453 2.58247 3.44032 2.5 3.23684 2.5C2.8299 2.5 2.5 2.82989 2.5 3.23684C2.5 3.45691 2.59648 3.65445 2.74945 3.78947C2.59648 3.92448 2.5 4.12202 2.5 4.3421C2.5 4.56217 2.59648 4.75971 2.74945 4.89473C2.59648 5.02974 2.5 5.22728 2.5 5.44736C2.5 5.66743 2.59648 5.86497 2.74945 5.99999C2.59648 6.135 2.5 6.33254 2.5 6.55261C2.5 6.77269 2.59648 6.97023 2.74945 7.10524C2.59648 7.24026 2.5 7.4378 2.5 7.65787C2.5 7.87795 2.59648 8.07549 2.74945 8.2105C2.59648 8.34552 2.5 8.54309 2.5 8.76316C2.5 9.17011 2.8299 9.5 3.23684 9.5C3.45692 9.5 3.65446 9.40352 3.78947 9.25055C3.92449 9.40352 4.12203 9.5 4.34211 9.5C4.56218 9.5 4.75972 9.40352 4.89474 9.25055C5.02975 9.40352 5.22729 9.5 5.44737 9.5C5.66744 9.5 5.86498 9.40352 6 9.25055C6.13502 9.40352 6.33256 9.5 6.55263 9.5C6.77271 9.5 6.97025 9.40352 7.10526 9.25055C7.24028 9.40352 7.43782 9.5 7.65789 9.5C7.87793 9.5 8.07552 9.40346 8.21054 9.25053C8.34556 9.4035 8.5431 9.49997 8.76317 9.49997L8.78202 9.49973C9.18025 9.48972 9.5 9.16377 9.5 8.76313C9.5 8.54302 9.40349 8.34545 9.25047 8.21043C9.40339 8.07542 9.49984 7.87791 9.49984 7.65787C9.49984 7.4378 9.40336 7.24026 9.25039 7.10524C9.40336 6.97023 9.49984 6.77269 9.49984 6.55261C9.49984 6.33254 9.40336 6.135 9.25039 5.99999C9.40336 5.86497 9.49984 5.66743 9.49984 5.44736C9.49984 5.22728 9.40336 5.02974 9.25039 4.89473C9.40336 4.75971 9.49984 4.56217 9.49984 4.3421C9.49984 4.12206 9.40339 3.92455 9.25047 3.78954C9.40348 3.65452 9.5 3.45695 9.5 3.23684C9.5 2.82989 9.16994 2.5 8.763 2.5C8.54297 2.5 8.34546 2.59644 8.21045 2.74936C8.07543 2.59644 7.87793 2.5 7.65789 2.5C7.43782 2.5 7.24028 2.59648 7.10526 2.74945C6.97025 2.59648 6.77271 2.5 6.55263 2.5C6.33256 2.5 6.13502 2.59648 6 2.74945C5.86498 2.59648 5.66744 2.5 5.44737 2.5C5.22729 2.5 5.02975 2.59648 4.89474 2.74945C4.75972 2.59648 4.56218 2.5 4.34211 2.5C4.12203 2.5 3.92449 2.59648 3.78947 2.74945Z" fill={color}/>
        <rect width="5.25" height="5.25" transform="translate(3.375 3.375)" fill="white"/>
        <mask id="mask0_83_262" maskUnits="userSpaceOnUse" x="3" y="3" width="6" height="6">
          <path d="M8.54844 3.375H3.45156C3.40928 3.375 3.375 3.40928 3.375 3.45156V8.54844C3.375 8.59072 3.40928 8.625 3.45156 8.625H8.54844C8.59072 8.625 8.625 8.59072 8.625 8.54844V3.45156C8.625 3.40928 8.59072 3.375 8.54844 3.375Z" fill="white"/>
        </mask>
        <g mask="url(#mask0_83_262)">
          <path d="M8.54844 3.375H3.45156C3.40928 3.375 3.375 3.40928 3.375 3.45156V8.54844C3.375 8.59072 3.40928 8.625 3.45156 8.625H8.54844C8.59072 8.625 8.625 8.59072 8.625 8.54844V3.45156C8.625 3.40928 8.59072 3.375 8.54844 3.375Z" fill="#D9D9D9"/>
          <path d="M3.04883 6.9539C3.5261 6.66695 3.70508 6.32822 4.68945 7.31258C5.3457 7.96883 5.26309 6.44339 6.00195 6.00009C6.82226 5.50791 8.29881 7.14849 8.62695 7.47661" stroke={color} strokeWidth="0.291667" strokeLinecap="round"/>
          <path d="M7.80664 4.6875C8.07846 4.6875 8.29882 4.46714 8.29882 4.19531C8.29882 3.92348 8.07846 3.70312 7.80664 3.70312C7.53481 3.70312 7.31445 3.92348 7.31445 4.19531C7.31445 4.46714 7.53481 4.6875 7.80664 4.6875Z" fill={color}/>
        </g>
      </svg>
    )
  }
];

export const FramePatternPreview: React.FC<{ pattern: FramePattern; isSelected: boolean; onClick: () => void }> = ({
  pattern,
  isSelected,
  onClick
}) => {
  return (
    <button
      onClick={onClick}
      className={`w-7 h-7 rounded-full flex items-center justify-center transition-all
        ${isSelected ? 'ring-2 ring-gray-400' : 'hover:ring-2 hover:ring-gray-200'}`}
    >
      {pattern.previewSvg('black')}
    </button>
  );
};

const ImageFrameTool: React.FC<ImageFrameToolProps> = ({
  isSelected,
  onClick,
  color = '#000000',
  selectedPattern = 'regular',
  onPatternSelect
}) => {
  const [isHovered, setIsHovered] = useState(false);
  const currentPattern = FRAME_PATTERNS.find(p => p.id === selectedPattern);

  const handleClick = () => {
    onClick();
    if (onPatternSelect) {
      onPatternSelect(selectedPattern);
    }
  };

  return (
    <button
      onClick={handleClick}
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
      className={`w-18 h-18 rounded-md flex items-center justify-center transition-all
        ${isSelected ? 'bg-gray-100' : ''}`}
      title="Image Frame Tool"
    >
      {currentPattern && currentPattern.svg(isSelected ? color : 'black', isSelected, isHovered)}
    </button>
  );
};

export default ImageFrameTool; 