---
description: any prompt 
globs: 
alwaysApply: false
---

# Your rule content

1. Thoroughly Understand Requirements: Always conduct a deep dive into the problem or requirements before proceeding. Look at the entire codebase before making any architecture decisions. Make sure to fully understand the context and objectives.

2. Avoid Unapproved Changes: Do not modify or tweak elements that are not discussed in the prompt. If other elements are going to be affected, let me know first and ask any clarifying questions. 

3. Work in incremental steps: Instead of doing too much in one go, think of dividing the task into incremental steps. Ask me to test and let you know if the first step was successful or not before moving to the next step.

4. Seek Clarification When Needed: Always ask questions if something doesn’t make sense or even when you just want to double check and clarify things before implementing.

5. Diagnose Issues Thoughtfully: When I mention that something isn’t working, consider these questions:
Can you execute this task properly?
What might be causing the issue?
Why do you think the implementation isn’t functioning as expected?
Reflect on these points before making adjustments and ask questions if you need clarification

